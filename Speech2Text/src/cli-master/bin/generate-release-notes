#!/usr/bin/env bash

PREVIOUS_VERSION=$1

if [ -z $PREVIOUS_VERSION ]; then
    cat <<-INFO
NAME:
  generate-release-notes - Generate release notes relative to a given version

USAGE:
  generate-release-notes PREVIOUS_VERSION [--all]

EXAMPLE:
  generate-release-notes 6.0.1
INFO

    exit 1
fi

if [ -z $(echo $PREVIOUS_VERSION | grep -e 'v') ]; then
    echo "Error - PREVIOUS_VERSION argument should have this form: v6.0.1"
    exit 1
fi

SHOW_ALL_COMMITS=''
if [ "$2" = "--all" ]; then
  SHOW_ALL_COMMITS=true
fi

VERSION=v$(cat VERSION)
URL_VERSION=$(cat VERSION)

cat <<-NOTES
CF version $VERSION
===================
Installers
----------
- [Debian 32 bit](https://cli.run.pivotal.io/stable?release=debian32&version=$URL_VERSION&source=github-rel)
- [Debian 64 bit](https://cli.run.pivotal.io/stable?release=debian64&version=$URL_VERSION&source=github-rel)
- [Redhat 32 bit](https://cli.run.pivotal.io/stable?release=redhat32&version=$URL_VERSION&source=github-rel)
- [Redhat 64 bit](https://cli.run.pivotal.io/stable?release=redhat64&version=$URL_VERSION&source=github-rel)
- [Mac OS X 64 bit](https://cli.run.pivotal.io/stable?release=macosx64&version=$URL_VERSION&source=github-rel)
- [Windows 32 bit](https://cli.run.pivotal.io/stable?release=windows32&version=$URL_VERSION&source=github-rel)
- [Windows 64 bit](https://cli.run.pivotal.io/stable?release=windows64&version=$URL_VERSION&source=github-rel)

Binaries
--------
- [Linux 32 bit binary]   (https://cli.run.pivotal.io/stable?release=linux32-binary&version=$URL_VERSION&source=github-rel)
- [Linux 64 bit binary]   (https://cli.run.pivotal.io/stable?release=linux64-binary&version=$URL_VERSION&source=github-rel)
- [Mac OS X 64 bit binary](https://cli.run.pivotal.io/stable?release=macosx64-binary&version=$URL_VERSION&source=github-rel)
- [Windows 32 bit binary] (https://cli.run.pivotal.io/stable?release=windows32-exe&version=$URL_VERSION&source=github-rel)
- [Windows 64 bit binary] (https://cli.run.pivotal.io/stable?release=windows64-exe&version=$URL_VERSION&source=github-rel)

Change Log
----------
NOTES

if [ -z $SHOW_ALL_COMMITS ]; then
  git --no-pager log \
    $PREVIOUS_VERSION..$VERSION \
    --grep "\[.*\d*\]" \
    --pretty=format:'* %s%n%b'
else
  git --no-pager log \
    $PREVIOUS_VERSION..$VERSION \
    --pretty=format:'* %s%n%b'
fi
