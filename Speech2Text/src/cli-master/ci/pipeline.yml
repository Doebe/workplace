---
groups:
- name: cli
  jobs:
  - rc
  - unit-linux64
  - unit-linux32
  - unit-darwin64
  - unit-win64
  - unit-win32
  - cats-linux64
  - cats-win64
  - gats-linux64
  - gats-win64
  - gats-win64-french
  - publish
- name: deployments
  jobs: [deploy-linux-cf, deploy-windows-cf]
- name: concourse
  jobs: [deploy-concourse]

resources:
- name: cli
  type: git
  source:
    uri: https://github.com/cloudfoundry/cli
    branch: master

- name: cli-ci
  type: git
  source:
    uri: git@github.com:cloudfoundry/cli-ci.git
    branch: concourse
    private_key: {{ci-repo-private-key}}

- name: cf-lite
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-lite.git
    branch: master

- name: cf-release
  type: git
  source:
    uri: https://github.com/cloudfoundry/cf-release.git
    branch: master

- name: bosh-lite
  type: git
  source:
    uri: https://github.com/cloudfoundry/bosh-lite.git
    branch: master

- name: gats
  type: git
  source:
    uri: https://github.com/cloudfoundry/GATS
    branch: master

- name: concourse-deployment
  type: bosh-deployment
  source:
    target: {{concourse-bosh-target}}
    username: {{concourse-bosh-username}}
    password: {{concourse-bosh-password}}
    deployment: concourse
    ignore_ssl: true

- name: concourse
  type: github-release
  source:
    user: concourse
    repository: concourse

- name: aws-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent

- name: version
  type: semver
  source:
    bucket: cf-cli-pipeline-artifacts
    key: current-version
    initial_version: 6.11.1
    access_key_id: {{pipeline-bucket-access-key-id}}
    secret_access_key: {{pipeline-bucket-secret-access-key}}

- name: linux64-binary
  type: s3
  source:
    bucket: cf-cli-pipeline-artifacts
    regexp: cf-linux64-(.*)
    access_key_id: {{pipeline-bucket-access-key-id}}
    secret_access_key: {{pipeline-bucket-secret-access-key}}

- name: linux32-binary
  type: s3
  source:
    bucket: cf-cli-pipeline-artifacts
    regexp: cf-linux32-(.*)
    access_key_id: {{pipeline-bucket-access-key-id}}
    secret_access_key: {{pipeline-bucket-secret-access-key}}

- name: windows64-binary
  type: s3
  source:
    bucket: cf-cli-pipeline-artifacts
    regexp: cf-windows64-(.*).exe
    access_key_id: {{pipeline-bucket-access-key-id}}
    secret_access_key: {{pipeline-bucket-secret-access-key}}

- name: windows32-binary
  type: s3
  source:
    bucket: cf-cli-pipeline-artifacts
    regexp: cf-windows32-(.*).exe
    access_key_id: {{pipeline-bucket-access-key-id}}
    secret_access_key: {{pipeline-bucket-secret-access-key}}

- name: darwin64-binary
  type: s3
  source:
    bucket: cf-cli-pipeline-artifacts
    regexp: cf-darwin64-(.*)
    access_key_id: {{pipeline-bucket-access-key-id}}
    secret_access_key: {{pipeline-bucket-secret-access-key}}

jobs:
- name: rc
  serial: true
  plan:
  - aggregate:
    - get: cli
      trigger: true
    - get: version
      params: {pre: plus}
      trigger: false
  - put: version
    params: {file: version/number}

- name: unit-linux64
  public: true
  plan:
  - get: cli
    passed: [rc]
    trigger: false
  - get: version
    passed: [rc]
    trigger: true
  - task: unit-tests
    file: cli/ci/unit.linux.yml
  - put: linux64-binary
    params: {from: unit-tests/cf-linux64-.*}

- name: unit-linux32
  public: true
  plan:
  - get: cli
    passed: [rc]
    trigger: false
  - get: version
    passed: [rc]
    trigger: true
  - task: unit-tests
    file: cli/ci/unit.linux32.yml
  - put: linux32-binary
    params: {from: unit-tests/cf-linux32-.*}

- name: unit-darwin64
  public: true
  plan:
  - get: cli
    passed: [rc]
    trigger: false
  - get: version
    passed: [rc]
    trigger: true
  - task: unit-tests
    file: cli/ci/unit.darwin.yml
  - put: darwin64-binary
    params: {from: unit-tests/cf-darwin64-.*}

- name: unit-win32
  public: true
  plan:
  - get: cli
    passed: [rc]
    trigger: false
  - get: version
    passed: [rc]
    trigger: true
  - task: unit-tests
    file: cli/ci/unit.windows32.yml
  - put: windows32-binary
    params: {from: unit-tests/cf-windows32-.*}

- name: unit-win64
  public: true
  plan:
  - get: cli
    passed: [rc]
    trigger: false
  - get: version
    passed: [rc]
    trigger: true
  - task: unit-tests
    file: cli/ci/unit.windows.yml
  - put: windows64-binary
    params: {from: unit-tests/cf-windows64-.*}

- name: cats-linux64
  public: true
  serial_groups: [cf-linux]
  plan:
  - aggregate:
    - get: cli
      passed: [unit-linux64]
      trigger: true
    - get: linux64-binary
      passed: [unit-linux64]
      trigger: false
    - get: cf-release
      trigger: false
      passed: [deploy-linux-cf]
      params:
        submodules:
          - src/github.com/cloudfoundry/cf-acceptance-tests
  - task: cats
    file: cli/ci/cats.linux.yml
    config:
      params:
        BOSH_LITE_IP: {{bosh-lite-ip-linux}}

- name: gats-linux64
  public: true
  serial_groups: [cf-linux]
  plan:
  - aggregate:
    - get: cli
      passed: [unit-linux64]
      trigger: true
    - get: linux64-binary
      passed: [unit-linux64]
      trigger: false
    - get: gats
  - task: gats
    file: cli/ci/gats.linux.yml
    config:
      params:
        BOSH_LITE_IP: {{bosh-lite-ip-linux}}

- name: cats-win64
  public: true
  serial_groups: [cf-windows]
  plan:
  - aggregate:
    - get: cli
      passed: [unit-win64]
      trigger: true
    - get: windows64-binary
      passed: [unit-win64]
      trigger: false
    - get: cf-release
      trigger: false
      passed: [deploy-windows-cf]
      params:
        submodules:
          - src/github.com/cloudfoundry/cf-acceptance-tests
  - task: cats
    file: cli/ci/cats.windows.yml
    config:
      params:
        BOSH_LITE_IP: {{bosh-lite-ip-windows}}

- name: gats-win64
  public: true
  serial_groups: [cf-windows]
  plan:
  - aggregate:
    - get: cli
      passed: [unit-win64]
      trigger: true
    - get: windows64-binary
      passed: [unit-win64]
      trigger: false
    - get: gats
  - task: gats
    file: cli/ci/gats.windows.yml
    config:
      params:
        BOSH_LITE_IP: {{bosh-lite-ip-windows}}

- name: gats-win64-french
  public: true
  serial_groups: [cf-windows]
  plan:
  - aggregate:
    - get: cli
      passed: [unit-win64]
      trigger: true
    - get: windows64-binary
      passed: [unit-win64]
      trigger: false
    - get: gats
  - task: gats
    file: cli/ci/gats.french.windows.yml
    config:
      params:
        BOSH_LITE_IP: {{bosh-lite-ip-windows}}

- name: publish
  serial: true
  plan:
  - aggregate:
    - get: cli
      trigger: true
      passed:
        - unit-linux64
        - unit-linux32
        - unit-darwin64
        - unit-win64
        - unit-win32
        - cats-linux64
        - cats-win64
        - gats-linux64
        - gats-win64
        - gats-win64-french
    - get: linux64-binary
      trigger: false
      passed: [unit-linux64]
    - get: linux32-binary
      trigger: false
      passed: [unit-linux32]
    - get: windows64-binary
      trigger: false
      passed: [unit-win64]
    - get: windows32-binary
      trigger: false
      passed: [unit-win32]
    - get: darwin64-binary
      trigger: false
      passed: [unit-darwin64]
    - get: cli-ci
      trigger: false
  - task: publish
    file: cli/ci/publish.yml
    config:
      params:
        AWS_ACCESS_KEY_ID: {{publish-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{publish-secret-access-key}}

- name: deploy-linux-cf
  serial: true
  plan:
  - aggregate:
    - get: cli-ci
      trigger: false
    - get: cf-release
      trigger: false
      params:
        submodules: none
    - get: bosh-lite
      trigger: false
  - task: provision
    privileged: true
    file: cli-ci/concourse/lite/provision-cf-lite.yml
    config:
      params:
        AWS_ACCESS_KEY_ID: {{lite-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{lite-secret-access-key}}
        LITE_NAME: linux
  - conditions: [success, failure]
    put: cli-ci
    params:
      repository: provision/cli-ci
      rebase: true

- name: deploy-windows-cf
  serial: true
  plan:
  - aggregate:
    - get: cli-ci
      trigger: false
    - get: cf-release
      trigger: false
      params:
        submodules: none
    - get: bosh-lite
      trigger: false
  - task: provision
    privileged: true
    file: cli-ci/concourse/lite/provision-cf-lite.yml
    config:
      params:
        AWS_ACCESS_KEY_ID: {{lite-access-key-id}}
        AWS_SECRET_ACCESS_KEY: {{lite-secret-access-key}}
        LITE_NAME: windows
  - conditions: [success, failure]
    put: cli-ci
    params:
      repository: provision/cli-ci
      rebase: true

- name: deploy-concourse
  serial: true
  plan:
  - aggregate:
    - get: concourse
      trigger: false
    - get: cli-ci
      trigger: false
    - get: aws-stemcell
      trigger: false
  - put: concourse-deployment
    params:
      manifest: cli-ci/ci/concourse-bosh.yml
      releases:
      - concourse/concourse-*.tgz
      - concourse/garden-linux-*.tgz
      stemcells:
      - aws-stemcell/*.tgz
