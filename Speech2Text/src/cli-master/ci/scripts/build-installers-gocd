#!/bin/bash

set -e

ROOT_DIR=$(pwd)
OUT_DIR=${ROOT_DIR}/out
RELEASE_DIR=${ROOT_DIR}/release
INSTALLERS_DIR=${ROOT_DIR}/installers
VERSION=$(${OUT_DIR}/cf-cli_linux_i686 -v | cut -d' ' -f 3 | cut -d'-' -f 1)


# Instructions for installing iscc:
# https://katastrophos.net/andre/blog/2009/03/16/setting-up-the-inno-setup-compiler-on-debian/
#
# forward X11 ports when installing 'Inno Setup' on the linux vm where the gocd agent runs 
#   $ ssh -X -i id_rsa.pem ubuntu@x.x.x.x' 

echo "building 32-bit Windows installer"
(
    cd ${INSTALLERS_DIR}/windows
    cp ${OUT_DIR}/cf-cli_win32.exe cf.exe

    sed -i -e "s/VERSION/${VERSION}/" ${ROOT_DIR}/ci/scripts/windows-installer.iss

    # Change the Unix file path to a Windows file path for the Inno Setup script.
    sed -i -e "s/CF_SOURCE/$(echo "z:$(pwd)/cf.exe" | sed 's,/,\\\\,g')/" ${ROOT_DIR}/ci/scripts/windows-installer.iss

    ${ROOT_DIR}/ci/scripts/iscc ${ROOT_DIR}/ci/scripts/windows-installer.iss
    mv ${ROOT_DIR}/ci/scripts/Output/setup.exe cf_installer.exe
    zip ${ROOT_DIR}/release/cf-cli-installer_win32.zip cf_installer.exe
    rm cf_installer.exe cf.exe
)

echo "building 64-bit Windows installer"
(
    cd ${INSTALLERS_DIR}/windows
    cp ${OUT_DIR}/cf-cli_winx64.exe cf.exe
    ${ROOT_DIR}/ci/scripts/iscc ${ROOT_DIR}/ci/scripts/windows-installer.iss
    mv ${ROOT_DIR}/ci/scripts/Output/setup.exe cf_installer.exe
    zip ${RELEASE_DIR}/cf-cli-installer_winx64.zip cf_installer.exe
    rm cf_installer.exe cf.exe
)

echo "building 32-bit Debian package"
(
    SIZE="$(BLOCKSIZE=1000 du ${OUT_DIR}/cf-cli_linux_i686 | cut -f 1)"
    cd ${INSTALLERS_DIR}/deb
    mkdir -p cf/usr/bin
    cp ${OUT_DIR}/cf-cli_linux_i686 cf/usr/bin/cf
    cp control.template cf/DEBIAN/control
    echo "Installed-Size: ${SIZE}" >> cf/DEBIAN/control
    echo "Version: ${VERSION}" >> cf/DEBIAN/control
    echo "Architecture: i386" >> cf/DEBIAN/control
    fakeroot dpkg --build cf cf-cli-installer_i686.deb
    mv cf-cli-installer_i686.deb ${RELEASE_DIR}/
    rm -rf cf/usr/bin cf/DEBIAN/control
)

echo "building 64-bit Debian package"
(
    SIZE="$(BLOCKSIZE=1000 du ${OUT_DIR}/cf-cli_linux_x86-64 | cut -f 1)"
    cd ${INSTALLERS_DIR}/deb
    mkdir -p cf/usr/bin
    cp ${OUT_DIR}/cf-cli_linux_x86-64 cf/usr/bin/cf
    cp control.template cf/DEBIAN/control
    echo "Installed-Size: ${SIZE}" >> cf/DEBIAN/control
    echo "Version: ${VERSION}" >> cf/DEBIAN/control
    echo "Architecture: amd64" >> cf/DEBIAN/control
    fakeroot dpkg --build cf cf-cli-installer_x86-64.deb
    mv cf-cli-installer_x86-64.deb ${RELEASE_DIR}/
    rm -rf cf/usr/bin cf/DEBIAN/control
)

echo "building 32-bit RedHat package"
(
    cd ${INSTALLERS_DIR}/rpm
    cp ${OUT_DIR}/cf-cli_linux_i686 cf
    RPM_VERSION=$(echo $VERSION | sed 's/-/_/')
    echo "Version: ${RPM_VERSION}" > cf-cli.spec
    cat cf-cli.spec.template >> cf-cli.spec
    rpmbuild --target i386 --define "_topdir $(pwd)/build" -bb cf-cli.spec
    mv build/RPMS/i386/cf-cli*.rpm ${RELEASE_DIR}/cf-cli-installer_i686.rpm
    rm -rf build cf cf-cli.spec
)

echo "building 64-bit RedHat package"
(
    cd ${INSTALLERS_DIR}/rpm
    cp ${OUT_DIR}/cf-cli_linux_x86-64 cf
    RPM_VERSION=$(echo $VERSION | sed 's/-/_/')
    echo "Version: ${RPM_VERSION}" > cf-cli.spec
    cat cf-cli.spec.template >> cf-cli.spec
    rpmbuild --target x86_64 --define "_topdir $(pwd)/build" -bb cf-cli.spec
    mv build/RPMS/x86_64/cf-cli*.rpm ${RELEASE_DIR}/cf-cli-installer_x86-64.rpm
    rm -rf build cf cf-cli.spec
)

echo "building OS X installer"
(
    SIZE="$(BLOCKSIZE=1000 du ${OUT_DIR}/cf-cli_osx | cut -f 1)"
    cd ${INSTALLERS_DIR}/osx
    sed -i -e "s/VERSION/${VERSION}/g" Distribution
    sed -i -e "s/SIZE/${SIZE}/g" Distribution
    mkdir -p cf-cli/usr/local/bin
    mkdir -p cf-cli/usr/local/share/doc/cf-cli
    cp ${OUT_DIR}/cf-cli_osx cf-cli/usr/local/bin/cf
    cp COPYING cf-cli/usr/local/share/doc/cf-cli
    chmod -R go-w cf-cli
    ( cd cf-cli && find usr | cpio -o --format=odc | gzip -c > ../Payload )
    ls4mkbom cf-cli | sed 's/1000\/1000/0\/80/' > bom_list
    mkbom -i bom_list Bom
    mv Bom Payload com.cloudfoundry.cli.pkg
    xar -c --compression none -f cf-cli-installer_osx.pkg com.cloudfoundry.cli.pkg Distribution
    mv cf-cli-installer_osx.pkg ${RELEASE_DIR}/
    rm -rf cf-cli com.cloudfoundry.cli.pkg/Payload com.cloudfoundry.cli.pkg/Bom bom_list
)
